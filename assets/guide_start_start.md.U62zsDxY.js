import{_ as a,c as e,o,a2 as t}from"./chunks/framework.DRZK5IXa.js";const p=JSON.parse('{"title":"项目启动","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start/start.md","filePath":"guide/start/start.md"}'),l={name:"guide/start/start.md"},i=t('<h1 id="项目启动" tabindex="-1">项目启动 <a class="header-anchor" href="#项目启动" aria-label="Permalink to &quot;项目启动&quot;">​</a></h1><h2 id="启动后端项目" tabindex="-1">启动后端项目 <a class="header-anchor" href="#启动后端项目" aria-label="Permalink to &quot;启动后端项目&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">相关信息</p><p>在启动之前，需要导入默认数据。默认数据位于<code>data/mysql/init/init.sql</code>文件中。 如果不导入默认数据，会导致很多功能无法正常使用。</p><p>注：不需要使用<code>sql/structure.sql</code>导入完整的表结构，项目在启动时会自动创建表。</p></div><h3 id="运行项目" tabindex="-1">运行项目 <a class="header-anchor" href="#运行项目" aria-label="Permalink to &quot;运行项目&quot;">​</a></h3><ol><li>进入到<code>server</code>目录</li><li>使命令行输入<code>go run cmd\\main.go -env dev</code>启动项目</li><li>访问<code>localhost:9000</code>，如果页面中出现<code>404 not found</code>则说明项目运行成功</li></ol><h2 id="启动前端项目" tabindex="-1">启动前端项目 <a class="header-anchor" href="#启动前端项目" aria-label="Permalink to &quot;启动前端项目&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">相关信息</p><p>前端需要使用yarn，如果尚未安装yarn，可以使用命令 <code>npm install -g yarn</code> 来安装yarn。</p></div><h3 id="运行用户端" tabindex="-1">运行用户端 <a class="header-anchor" href="#运行用户端" aria-label="Permalink to &quot;运行用户端&quot;">​</a></h3><ol><li>进入到<code>web/web-client</code>目录</li><li>首次运行需要执行<code>yarn install</code> 安装项目依赖</li><li>使命令行输入<code>yarn dev</code>启动项目</li></ol><h3 id="运行管理端" tabindex="-1">运行管理端 <a class="header-anchor" href="#运行管理端" aria-label="Permalink to &quot;运行管理端&quot;">​</a></h3><ol><li>进入到<code>web/admin-client</code>目录</li><li>首次运行需要执行<code>yarn install</code> 安装项目依赖</li><li>使命令行输入<code>yarn dev</code>启动项目</li></ol>',11),c=[i];function d(r,s,n,h,u,_){return o(),e("div",null,c)}const b=a(l,[["render",d]]);export{p as __pageData,b as default};
